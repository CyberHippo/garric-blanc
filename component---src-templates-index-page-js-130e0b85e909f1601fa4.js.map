{"version":3,"file":"component---src-templates-index-page-js-130e0b85e909f1601fa4.js","mappings":"qKAGA,IAAeA,GACbC,EAAAA,cAAA,WACEC,UAAW,aAAaF,EAAMG,MAAQ,GAAM,GAAK,qBAC/CH,EAAMI,aACJJ,EAAMK,KAAKC,YAAYC,UAAY,aAAe,aACtDC,MACER,EAAMK,KAAKC,YAAYC,WAAa,CAClCE,gBAAiB,OACfT,EAAMK,KAAKC,YAAYC,UAAUG,gBAAgBC,MAAMC,SAK7DX,EAAAA,cAACY,EAAAA,KAAI,CAACC,GAAiE,KAA7Dd,EAAMK,KAAKU,OAAOC,KAAKC,MAAM,KAAKC,MAAM,GAAI,GAAGC,KAAK,KAAc,IAAM,IAAInB,EAAMK,KAAKU,OAAOC,KAAKC,MAAM,KAAKC,MAAM,GAAI,GAAGC,KAAK,OAAQjB,UAAU,kBAC1JD,EAAAA,cAAA,OAAKC,UAAU,qBACbD,EAAAA,cAAA,MAAIC,UAAU,mBACXF,EAAMK,KAAKC,YAAYc,S,0ECmBlC,UA9BkBC,IAAe,IAAd,KAAEC,GAAMD,EACvB,MAAME,EAAYD,EAAKE,KAAKC,aAAaL,MACnCM,EAASJ,EAAKE,KAAKC,aAAaC,OAChCC,EAAQL,EAAKM,kBAAkBC,MACrC,IAAIC,EAAc,EAElB,OACI7B,EAAAA,cAAC8B,EAAAA,EAAM,CAACX,MAAOG,EAAWG,OAAQA,GAC9BzB,EAAAA,cAAC+B,EAAAA,EAAG,CAACC,SAAU,CAAC,eAAgB,uBAAwB,qBACpDb,MAAOE,EAAKY,eAAe5B,YAAYc,MACvCe,YAAab,EAAKY,eAAe5B,YAAY6B,aAAgB,GAC7DC,MAAOd,EAAKY,eAAe5B,YAAYC,UAAUG,gBAAgBC,MAAMC,MAG3EX,EAAAA,cAAA,OAAKC,UAAU,aACVyB,EAAMU,KAAIC,IAAe,IAAd,KAAEjC,GAAMiC,EAEhB,OADAR,IAEI7B,EAAAA,cAACsC,EAAAA,EAAQ,CACLC,IAAKnC,EAAKU,OAAOC,KACjBb,MAAO2B,EACPzB,KAAMA,EACND,UAAW,QACb,KAIT,C","sources":["webpack://clay-personal-gatsby-theme/./src/components/postCard.js","webpack://clay-personal-gatsby-theme/./src/templates/index-page.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default props => (\n  <article\n    className={`post-card ${props.count % 3 === 1 && `post-card-large`} ${\n      props.postClass\n    } ${props.node.frontmatter.thumbnail ? `with-image` : `no-image`}`}\n    style={\n      props.node.frontmatter.thumbnail && {\n        backgroundImage: `url(${\n          props.node.frontmatter.thumbnail.childImageSharp.fluid.src\n        })`,\n      }\n    }\n  >\n    <Link to={props.node.fields.slug.split('/').slice(2, -1).join('/') === '' ? '/' : `/${props.node.fields.slug.split('/').slice(2, -1).join('/')}`} className=\"post-card-link\">\n      <div className=\"post-card-content\">\n        <h2 className=\"post-card-title\">\n          {props.node.frontmatter.title }\n        </h2>\n      </div>\n    </Link>\n  </article>\n)\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport PostCard from \"../components/postCard\"\n\n// eslint-disable-next-line\nconst IndexPage = ({ data }) => {\n    const siteTitle = data.site.siteMetadata.title\n    const social = data.site.siteMetadata.social\n    const posts = data.allMarkdownRemark.edges\n    let postCounter = 0\n\n    return (\n        <Layout title={siteTitle} social={social}>\n            <Seo keywords={[`Gatsby Theme`, `Free Gatsby Template`, `Clay Gatsby Theme`]}\n                title={data.markdownRemark.frontmatter.title}\n                description={data.markdownRemark.frontmatter.description ||  ''}\n                image={data.markdownRemark.frontmatter.thumbnail.childImageSharp.fluid.src}\n\n            />\n            <div className=\"post-feed\">\n                {posts.map(({ node }) => {\n                    postCounter++\n                    return (\n                        <PostCard\n                            key={node.fields.slug}\n                            count={postCounter}\n                            node={node}\n                            postClass={`post`}\n                        />\n                    )\n                })}\n            </div>\n        </Layout>\n    )\n}\nexport default IndexPage\nexport const IndexPageQuery = graphql`\n  query IndexPage {\n    site {\n        siteMetadata {\n          title\n          social{\n            twitter\n            facebook\n          }\n        }\n      }\n      markdownRemark(frontmatter: {templateKey: {eq: \"index-page\"}}) {\n        frontmatter {\n          title\n          description\n          thumbnail {\n            childImageSharp {\n              fluid(maxWidth: 1360) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n\n      }\n      allMarkdownRemark(\n        filter: {frontmatter: {pagetype: {eq: \"main\"}}}\n        limit: 30\n        sort: {frontmatter: {number: ASC}}\n      ) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              date(formatString: \"MMMM DD,YYYY\")\n              title\n              description\n              thumbnail {\n                childImageSharp {\n                  fluid(maxWidth: 1360) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n  }\n`;\n"],"names":["props","React","className","count","postClass","node","frontmatter","thumbnail","style","backgroundImage","childImageSharp","fluid","src","Link","to","fields","slug","split","slice","join","title","_ref","data","siteTitle","site","siteMetadata","social","posts","allMarkdownRemark","edges","postCounter","Layout","Seo","keywords","markdownRemark","description","image","map","_ref2","PostCard","key"],"sourceRoot":""}