{"version":3,"file":"component---src-templates-news-page-js-eab6cc68d3337a0adc91.js","mappings":"qKAGA,IAAeA,GACbC,EAAAA,cAAA,WACEC,UAAW,aAAaF,EAAMG,MAAQ,GAAM,GAAK,qBAC/CH,EAAMI,aACJJ,EAAMK,KAAKC,YAAYC,UAAY,aAAe,aACtDC,MACER,EAAMK,KAAKC,YAAYC,WAAa,CAClCE,gBAAiB,OACfT,EAAMK,KAAKC,YAAYC,UAAUG,gBAAgBC,MAAMC,SAK7DX,EAAAA,cAACY,EAAAA,KAAI,CAACC,GAAiE,KAA7Dd,EAAMK,KAAKU,OAAOC,KAAKC,MAAM,KAAKC,MAAM,GAAI,GAAGC,KAAK,KAAc,IAAM,IAAInB,EAAMK,KAAKU,OAAOC,KAAKC,MAAM,KAAKC,MAAM,GAAI,GAAGC,KAAK,OAAQjB,UAAU,kBAC1JD,EAAAA,cAAA,OAAKC,UAAU,qBACbD,EAAAA,cAAA,MAAIC,UAAU,mBACXF,EAAMK,KAAKC,YAAYc,S,0EC2BlC,UAtCiBC,IAAe,IAAd,KAAEC,GAAMD,EACxB,MAAME,EAAYD,EAAKE,KAAKC,aAAaL,MACnCM,EAASJ,EAAKE,KAAKC,aAAaC,OAChCC,EAAQL,EAAKM,kBAAkBC,MACrC,IAAIC,EAAc,EAElB,OACE7B,EAAAA,cAAC8B,EAAAA,EAAM,CAACX,MAAOG,EAAWG,OAAQA,GAChCzB,EAAAA,cAAC+B,EAAAA,EAAG,CACFZ,MAAOE,EAAKW,eAAe3B,YAAYc,MACvCc,YAAaZ,EAAKW,eAAe3B,YAAY4B,aAAe,GAC5DC,MAAOb,EAAKW,eAAe3B,YAAYC,UAAUG,gBAAgBC,MAAMC,MAIxEU,EAAKE,KAAKC,aAAaS,aACtBjC,EAAAA,cAAA,UAAQC,UAAU,aAChBD,EAAAA,cAAA,MAAIC,UAAU,mBACXoB,EAAKE,KAAKC,aAAaS,cAI9BjC,EAAAA,cAAA,OAAKC,UAAU,aACZyB,EAAMS,KAAIC,IAAe,IAAd,KAAEhC,GAAMgC,EAElB,OADAP,IAEE7B,EAAAA,cAACqC,EAAAA,EAAQ,CACPC,IAAKlC,EAAKU,OAAOC,KACjBb,MAAO2B,EACPzB,KAAMA,EACND,UAAW,QACX,KAID,C","sources":["webpack://clay-personal-gatsby-theme/./src/components/postCard.js","webpack://clay-personal-gatsby-theme/./src/templates/news-page.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default props => (\n  <article\n    className={`post-card ${props.count % 3 === 1 && `post-card-large`} ${\n      props.postClass\n    } ${props.node.frontmatter.thumbnail ? `with-image` : `no-image`}`}\n    style={\n      props.node.frontmatter.thumbnail && {\n        backgroundImage: `url(${\n          props.node.frontmatter.thumbnail.childImageSharp.fluid.src\n        })`,\n      }\n    }\n  >\n    <Link to={props.node.fields.slug.split('/').slice(2, -1).join('/') === '' ? '/' : `/${props.node.fields.slug.split('/').slice(2, -1).join('/')}`} className=\"post-card-link\">\n      <div className=\"post-card-content\">\n        <h2 className=\"post-card-title\">\n          {props.node.frontmatter.title }\n        </h2>\n      </div>\n    </Link>\n  </article>\n)\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport PostCard from \"../components/postCard\"\n\n// eslint-disable-next-line\nconst WorkPage = ({ data }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const social = data.site.siteMetadata.social\n  const posts = data.allMarkdownRemark.edges\n  let postCounter = 0\n\n  return (\n    <Layout title={siteTitle} social={social}>\n      <Seo\n        title={data.markdownRemark.frontmatter.title}\n        description={data.markdownRemark.frontmatter.description || ''}\n        image={data.markdownRemark.frontmatter.thumbnail.childImageSharp.fluid.src}\n\n      />\n\n      {data.site.siteMetadata.description && (\n        <header className=\"page-head\">\n          <h2 className=\"page-head-title\">\n            {data.site.siteMetadata.description}\n          </h2>\n        </header>\n      )}\n      <div className=\"post-feed\">\n        {posts.map(({ node }) => {\n          postCounter++\n          return (\n            <PostCard\n              key={node.fields.slug}\n              count={postCounter}\n              node={node}\n              postClass={`post`}\n            />\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\nexport default WorkPage\nexport const WorkPageQuery = graphql`\nquery IndexPage {\n  site {\n    siteMetadata {\n      title\n      social{\n        twitter\n        facebook\n      }\n    }\n  }\n  markdownRemark(frontmatter: {templateKey: {eq: \"news-page\"}}) {\n    frontmatter {\n      title\n      description\n      thumbnail {\n        childImageSharp {\n          fluid(maxWidth: 1360) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n    \n  }\n  allMarkdownRemark(\n    filter: {frontmatter: {templateKey: {eq: \"blog-post\"}}}\n    limit: 30\n    sort: {frontmatter: {date: DESC}}\n  ) {\n    edges {\n      node {\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"DD:MM:YYYY hh:mm a\")\n          title\n          description\n          thumbnail {\n            childImageSharp {\n              fluid(maxWidth: 1360) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;"],"names":["props","React","className","count","postClass","node","frontmatter","thumbnail","style","backgroundImage","childImageSharp","fluid","src","Link","to","fields","slug","split","slice","join","title","_ref","data","siteTitle","site","siteMetadata","social","posts","allMarkdownRemark","edges","postCounter","Layout","Seo","markdownRemark","description","image","map","_ref2","PostCard","key"],"sourceRoot":""}